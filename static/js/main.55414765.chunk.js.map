{"version":3,"sources":["actionTypes.js","WebAPI.js","components/nav/nav.js","container/navTabContainer.js","action.js","components/footer/footer.js","components/share/index.js","container/shareContainer.js","components/home/index.js","components/edit/index.js","container/editContainer.js","components/post_list/index.js","container/postListContainer.js","components/post/index.js","container/postContainer.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["UPDATE_NAV_TAB","getSinglePost","postId","axios","get","deletePost","delete","sharePost","post","editPost","put","ItemNav","props","to","children","exact","updateTab","path","match","className","onClick","Nav","name","style","fontSize","color","connect","state","navTab","nav","dispatch","tab","type","actionTypes","updateNavTab","Footer","href","Component","Share","handleChange","e","author","title","body","setState","target","value","onSubmit","prevProps","this","isLoadingSharePost","history","console","log","push","placeholder","onChange","height","withRouter","payload","WebAPI","action","Img","src","desc","link","alt","Home","pictures","isLoading","url","then","res","data","template","map","picture","urls","small","alt_description","links","html","Edit","onConfirm","params","id","resp","catch","error","isLoadingEditPost","PostList","getPostList","posts","key","source","isLoadingGetPosts","Item","createdAt","Post","onDelete","window","confirm","isLoadingDeletePost","isLoadingGetPost","App","component","Boolean","location","hostname","reducer","globalState","reducers","combineReducers","store","createStore","applyMiddleware","logger","promiseMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55414765.chunk.js","sourcesContent":["export const UPDATE_NAV_TEXT = 'UPDATE_NAV_TEXT'\nexport const UPDATE_NAV_TAB = 'UPDATE_NAV_TAB'\n\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'\n\nexport const SINGLE_GET_POST = 'SINGLE_GET_POST'\nexport const SINGLE_GET_POST_SUCCESS = 'SINGLE_GET_POST_SUCCESS'\n","import axios from 'axios';\n\nexport const getPosts = () => axios.get('https://qootest.com/posts?_sort=id&_order=desc&_limit=10')\nexport const getSinglePost = (postId) => axios.get(`https://qootest.com/posts/${postId}`)\nexport const deletePost = postId => axios.delete(`https://qootest.com/posts/${postId}`)\nexport const sharePost = (post) => axios.post('https://qootest.com/posts', post)\nexport const editPost = (postId, post) => axios.put(`https://qootest.com/posts/${postId}`, post)","import React, { Component } from 'react';\nimport './nav.css';\nimport {\n    Link, Route\n} from \"react-router-dom\";\nimport * as action from '../../action'\nimport FontAwesome from 'react-fontawesome';\nimport { FaMarkdown } from 'react-icons/fa';\n\nfunction ItemNav(props) {\n    const { to, children, exact, updateTab } = props\n    return (\n        <Route\n            path={to}\n            exact={exact}\n            children={({ match }) => (\n                <button className={`nav__item ${match ? 'active' : \"\"}`}\n                    onClick={() => { updateTab(to) }}\n                >\n                    <Link to={to}>\n                        {children}\n                    </Link>\n                </button>\n            )}\n        />\n    )\n}\n\nconst Nav = ({ updateTab }) => {\n    const style = {\n        fontSize: \"25px\",\n        color: \"black\"\n    }\n    return (\n        <nav className=\"nav\">\n            <button className=\"nav__item\" ><b>Blog</b></button>\n            <ItemNav to=\"/\" exact={true} updateTab={updateTab}>\n                <FontAwesome\n                    name='fas fa-home'\n                    style={{ style }}\n                />\n                <span>Home</span>\n            </ItemNav>\n            <ItemNav to=\"/post\" updateTab={updateTab}>\n                Post\n                </ItemNav>\n            <ItemNav to=\"/share\" updateTab={updateTab}>\n                <FaMarkdown style={{ fontSize: \"25px\"}} />\n                Share\n                </ItemNav>\n        </nav>\n    )\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {\n    Link, Route\n} from \"react-router-dom\";\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux'\nimport Nav from '../components/nav/nav.js'\nimport { updateNavTab, updateNavText } from '../action';\n\nconst navTabContainer = (props) => {\n    return <Nav {...props} />\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        navTab: state.nav.navTab\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateTab: tab => dispatch(updateNavTab(tab))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(navTabContainer);\n","import * as actionTypes from './actionTypes'\nimport * as WebAPI from './WebAPI'\n\n// action creator\nexport const updateNavTab = (tab) => {\n    return {\n        type: actionTypes.UPDATE_NAV_TAB,\n        name: tab\n    }\n}\n\nexport const getPostList = () => {\n    return {\n        type: 'GET_POST_LIST',\n        payload: WebAPI.getPosts()\n    }\n}\n\nexport const SingleGetPost = (postId) => {\n    return {\n        type: 'GET_POST',\n        payload: WebAPI.getSinglePost(postId)\n    }\n}\n\nexport const DeletePost = (postId) => {\n    return {\n        type: 'DELETE_POST',\n        payload: WebAPI.deletePost(postId)\n    }\n}\n\nexport const ShareSinglePost = (post) => {\n    return {\n        type: 'SHARE_POST',\n        payload: WebAPI.sharePost(post)\n    }\n}\n\nexport const EditSinglePost = (postId, post) => {\n    return {\n        type: 'EDIT_POST',\n        payload: WebAPI.editPost(postId, post)\n    }\n}","import React, { Component } from 'react';\nimport './footer.css';\nimport {\n    Link, Route\n} from \"react-router-dom\";\nimport FontAwesome from 'react-fontawesome';\n\nclass Footer extends Component {\n    render() {\n        const style = {\n            color: \"black\",\n            fontSize: \"15px\"\n        }\n        return (\n            <div className=\"footer\">\n                <div className=\"wrapper clearfix\">\n                    <div className=\"copyRight\">\n                        <div className=\"title\">Copyright © 2019 Fan630 Inc. All rights reserved</div>\n                        <div className=\"subTitle\">Build website with lots of fun</div>\n                    </div>\n                    <div className=\"socialMedia\">\n                        <div className=\"link\">\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-facebook'\n                                    style={{ style }}\n                                />\n                            </a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-twitter'\n                                    style={{ style }}\n                                />\n                            </a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-weixin'\n                                    style={{ style }}\n                                /></a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-google'\n                                    style={{ style }}\n                                />\n                            </a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-behance'\n                                    style={{ style }}\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Footer;","import React, { Component } from 'react';\nimport './share.css';\nimport { sharePost } from '../../WebAPI'\nimport axios from 'axios';\nimport {\n    Link\n} from 'react-router-dom'\n\nimport FontAwesome from 'react-fontawesome';\n\n\n\nclass Share extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            author: '',\n            title: '',\n            body: ''\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isLoadingSharePost, history } = this.props\n\n        if (\n            isLoadingSharePost !== prevProps.isLoadingSharePost && !isLoadingSharePost\n        ) {\n            history.push('/post')\n        } else {\n            console.log(this.state)\n        }\n    }\n\n    handleChange = (e) => {\n        const { author, title, body } = this.state\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    onSubmit = () => {\n        const { author, title, body } = this.state\n        const post = { author, title, body }\n        this.props.sharePost(post)\n        this.setState({\n            author: '',\n            title: '',\n            body: ''\n        })\n    }\n\n    render() {\n        const { author, title, body } = this.state\n        const isLoadingSharePost = this.props\n\n        const style = {\n            height: '300px'\n        }\n        return (\n            <div className=\"wrapper\">\n                <h1>Share your post</h1>\n                <Link to=\"/post\">\n                    <FontAwesome\n                        name='angle-double-left'\n                        style={{ fontSize: \"25px\" }}\n                    />\n                    <span>Back to PostList</span>\n                </Link>\n\n                <div className=\"input-group mx-auto\">\n                    <div className=\"input-group__item mt-3 \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"name\" name=\"author\" value={author} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"title\" name=\"title\" value={title} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item\">\n                        <textarea className=\"form-control\" placeholder=\"body\" style={style} name=\"body\" value={body} onChange={this.handleChange}></textarea>\n                    </div>\n                    <button className=\"btn btn-outline-secondary mx-auto\" type=\"button\" onClick={this.onSubmit}>send</button>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Share\n\n\n   ","import React, { Component } from 'react';\nimport '../components/post/post.css'\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { sharePost } from '../WebAPI'\nimport * as action from '../action'\nimport Share from '../components/share'\n\nconst shareContainer = (props) => {\n    return <Share {...props} />\n}\n\n\nconst mapStateToProps = (state) =>{\n    return{\n        isLoadingSharePost: state.nav.isLoadingSharePost, \n    }\n}\n\n//重點就是這裡要實作改變\nconst mapDispatchToProps = dispatch => {\n    return {\n        sharePost: (post) => {\n            dispatch(action.ShareSinglePost(post))\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(shareContainer)\n    )\n\n\n","import React, { Component } from 'react';\nimport './home.css';\nimport axios from 'axios';\nimport FontAwesome from 'react-fontawesome';\n\nconst Img = ({ src, desc, link }) => {\n    return (\n        <div className=\"pic\">\n            <a href={link} target=\"_blank\">\n                <img src={src} alt=\"\"/>\n            </a>\n            <p>{desc}</p>\n        </div>\n    )\n}\n\n\nclass Home extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pictures: [],\n            isLoading: true\n        }\n    }\n\n    componentDidMount() {\n        const { pictures } = this.state\n        const url = \"https://api.unsplash.com/photos/\" + \"?client_id=aae4b30df237a7474cc5ff86eca6fd20ff9c173db667d16b8958205a6948fab4\" + \"&per_page=30\";\n        axios.get(url)\n        //.then(res => console.log(res))\n        axios.get(url)\n            .then(res => {\n                this.setState({\n                    pictures: res.data,\n                    isLoading: false\n                })\n            })\n\n    }\n\n    render() {\n        const { pictures, isLoading} = this.state\n        const template =(\n            <div className=\"wrapper\">\n                {pictures.map(picture =>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Img src={picture.urls.small} desc={picture.alt_description} link={picture.links.html}/>\n                            </div>\n                    </div>\n                )}\n            </div>\n        )\n        return (\n            <div>\n                <h1>Welcome</h1>\n                {isLoading ? <h4>Loading...</h4> : template}\n            </div>\n        )\n    }\n}\n\n\nexport default Home;","import React, { Component } from 'react';\nimport './edit.css';\nimport axios from 'axios';\nimport {\n    Link\n} from \"react-router-dom\"\nimport FontAwesome from 'react-fontawesome';\nimport { editPost, getSinglePost } from '../../WebAPI'\n\nclass Edit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: '',\n            author: '',\n            title: '',\n            body: ''\n        }\n    }\n\n    componentDidMount() {\n        const postId = this.props.match.params.id\n        getSinglePost(postId)\n            .then(resp => {\n                this.setState({\n                    id: resp.data.id,\n                    author: resp.data.author,\n                    title: resp.data.title,\n                    body: resp.data.body\n                })\n            })\n            .catch(error => console.log(error))\n    }\n\n    //這邊已經可以拿掉變更後的值. \n    handleChange = (e) => {\n        const { author, title, body } = this.state\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    onConfirm = () => {\n        const { author, title, body } = this.state\n        const postId = this.props.match.params.id\n        const post = { author, title, body }\n        this.props.editPost(postId, post)\n\n        this.setState({\n            author: '',\n            title: '',\n            body: ''\n        })\n    }\n\n    // 這樣做速度會快於\bapi, race condition....\n    componentDidUpdate(prevProps) {\n        const { isLoadingEditPost, history } = this.props\n        if (\n            isLoadingEditPost !== prevProps.isLoadingEditPost && !isLoadingEditPost\n        ) {\n            history.push('/post')\n        } \n    }\n\n\n\n    render() {\n        const { author, title, body } = this.state\n        const style = {\n            height: '300px'\n        }\n        return (\n            <div className=\"wrapper\">\n                <h1>Edit your post</h1>\n                <Link to=\"/post\">\n                    <FontAwesome\n                        name='angle-double-left'\n                        style={{ fontSize: \"25px\" }}\n                    />\n                    <span>Back to PostList</span>\n                </Link>\n\n                <div className=\"input-group mx-auto\">\n                    <div className=\"input-group__item mt-3 \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"name\" name=\"author\" value={author} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"title\" name=\"title\" value={title} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item\">\n                        <textarea className=\"form-control\" placeholder=\"body\" style={style} name=\"body\" value={body} onChange={this.handleChange}></textarea>\n                    </div>\n                    <button className=\"btn btn-outline-secondary mx-auto\" type=\"button\" onClick={this.onConfirm}>Confirm</button>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default Edit;","import React, { Component } from 'react';\nimport '../components/post/post.css'\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { editPost } from '../WebAPI'\nimport * as action from '../action'\nimport Edit from '../components/edit'\n\nconst editContainer = (props) => {\n    return <Edit {...props} />\n}\n\n\nconst mapStateToProps = (state) =>{\n    return{\n        isLoadingEditPost: state.nav.isLoadingEditPost\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        editPost: (postId, post) => {\n            dispatch(action.EditSinglePost(postId, post))\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(editContainer)\n    )\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from \"react-router-dom\";\nimport {getPosts} from '../../WebAPI'\nimport ReactMarkdown from 'react-markdown';\nimport './post.css';\n\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.getPostList()\n    }\n\n    render() {\n        const { posts, history } = this.props\n        return (\n            <div className=\"wrapper\">\n                <ul className=\"list-group mt-5\">\n                    {posts.map((post) =>\n                        <li className=\"list-group-item\"\n                            key={post.id}\n                            id={post.id}\n                            onClick={() => {\n                                history.push('/post/' + post.id)\n                            }}\n                        >\n                            <ReactMarkdown source={post.title} />\n                            \n                        </li>\n                    )}\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default PostList;","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { getPosts } from '../WebAPI'\nimport * as action from '../action'\nimport PostList from '../components/post_list'\n\nconst postListContainer = (props) => {\n    return <PostList {...props} />\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoadingGetPosts: state.nav.isLoadingGetPosts,\n        posts: state.nav.posts\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPostList: () => {\n            dispatch(action.getPostList())\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(postListContainer)\n    );","import React, { Component } from 'react';\nimport './post.css';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport {\n    Link\n} from \"react-router-dom\"\nimport FontAwesome from 'react-fontawesome';\nimport { getSinglePost, deletePost } from '../../WebAPI'\n\nclass Item extends Component {\n    render() {\n        const { post } = this.props\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-3 info\">\n                        <span>Id</span>\n                        <p>{post.id}</p>\n                        <span>Author</span>\n                        <p>{post.author ? <ReactMarkdown source={post.author} />: '作者不詳'}</p>\n                        <span>Title</span>\n                        <p><ReactMarkdown source={post.title} /></p>\n                        <span>Created Time</span>\n                        <p className=\"createdTime\">{post.createdAt ? post.createdAt : '無從得知'}</p>\n                    </div>\n                    <div className=\"col-9 article\">\n                        <div className=\"content\">\n                            {post.body ? <ReactMarkdown source={post.body} /> : 'Loading...'}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass Post extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        const postId = this.props.match.params.id\n        this.props.getSinglePost(postId)\n    }\n\n\n    onDelete = () => {\n        const message = 'Are you sure deleting this?';\n        const postId = this.props.match.params.id\n        const { deletePost } = this.props;\n        if (window.confirm(message)) {\n            deletePost(postId);\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        const { isLoadingDeletePost, history} = this.props\n        if (isLoadingDeletePost !== prevProps.isLoadingDeletePost && !isLoadingDeletePost){\n            history.push('/post')\n        }\n    }\n\n\n    render() {\n        const { post, history, deletePost } = this.props\n        return (\n            <div className=\"wrapper\">\n                <button type=\"button\" className=\"delete btn btn-secondary mt-3\" onClick={this.onDelete}>\n                    Delete\n                </button>\n                <button type=\"button\" className=\"edit btn btn-secondary mt-3\" onClick={() => {\n                    history.push('/post/edit/' + post.id)\n                }}>\n                    Edit\n                </button>\n                <ul className=\"list-group\">\n                    <Link to=\"/post\">\n                        <FontAwesome\n                            name='angle-double-left'\n                            style={{ fontSize: \"25px\" }}\n                        />\n                        <span>Back to PostList</span>\n                    </Link>\n                    <Item post={post} />\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default Post;","import React, { Component } from 'react';\nimport '../components/post/post.css'\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { getSinglePost, deletePost } from '../WebAPI'\nimport * as action from '../action'\nimport Post from '../components/post'\n\nconst postContainer = (props) => {\n    return <Post {...props} />\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoadingGetPost: state.nav.isLoadingGetPost,\n        isLoadingDeletePost: state.nav.isLoadingDeletePost,\n        post: state.nav.post\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getSinglePost: (postId) => {\n            dispatch(action.SingleGetPost(postId))\n        },\n        deletePost: (postId) => {\n            dispatch(action.DeletePost(postId))\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(postContainer)\n    )\n","// eslint-disable-next-line\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Nav from './container/navTabContainer'\nimport Footer from './components/footer/footer.js'\nimport Share from './container/shareContainer'\nimport Home from './components/home'\nimport Edit from './container/editContainer.js'\nimport PostList from './container/postListContainer'\nimport Post from './container/postContainer'\nimport FontAwesome from 'react-fontawesome';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Nav />\n          <Footer />\n          <div className=\"page\">\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/share\" component={Share} />\n            <Route exact path=\"/post/:id\" component={Post} />\n            <Route exact path=\"/post/edit/:id\" component={Edit} />\n            <Route exact path=\"/post\" component={PostList} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actionTypes'\n\nconst state = {\n    navTab: 'Home',\n    isLoadingGetPosts: false,\n    isLoadingGetPost: false,\n    isLoadingDeletePost: false,\n    isLoadingSharePost: false,\n    isLoadingEditPost: false,\n    posts: [],\n    post: {},\n}\n\nfunction reducer(globalState = state, action) {\n\n    switch (action.type) {\n        case actionTypes.UPDATE_NAV_TAB:\n            return {\n                ...globalState,\n                navTab: action.name\n            }\n\n        case 'GET_POST_LIST_PENDING':\n            return {\n                ...globalState,\n                isLoadingGetPosts: true,\n            }\n\n        case 'GET_POST_LIST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingGetPosts: false,\n                posts: action.payload.data\n            }\n\n        case 'GET_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingGetPost: true,\n            }\n\n        case 'GET_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingGetPost: false,\n                post: action.payload.data\n            }\n\n        case 'DELETE_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingDeletePost: true,\n            }\n\n        case 'DELETE_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingDeletePost: false,\n                //posts: state.posts.filter(post => post.id !== action.payload)\n            }\n\n        case 'SHARE_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingSharePost: true,\n            }\n\n        case 'SHARE_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingSharePost: false,\n                post: [...state.posts, action.payload]\n            }\n\n        case 'EDIT_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingEditPost: true,\n            }\n\n        case 'EDIT_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingEditPost: false,\n                post: [...state.posts, action.payload]\n            }\n\n        default:\n            return globalState\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactMarkdown from 'react-markdown';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\n// import thunk from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport logger from 'redux-logger'\nimport reducer from './reducer'\n\nconst reducers = combineReducers({\n    nav: reducer\n})\n// const store = createStore(reducers, applyMiddleware(thunk))\n\nconst store = createStore(reducers, applyMiddleware(logger, promiseMiddleware))\n// action => funA => funcA(dispatch)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}