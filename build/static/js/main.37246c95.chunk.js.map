{"version":3,"sources":["actionTypes.js","WebAPI.js","action.js","components/nav/nav.js","container/navTabContainer.js","components/footer/footer.js","components/share/index.js","container/shareContainer.js","components/home/index.js","container/HomeContainer.js","components/edit/index.js","container/editContainer.js","components/post_list/index.js","container/postListContainer.js","components/post/index.js","container/postContainer.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["UPDATE_NAV_TAB","getSinglePost","postId","axios","get","deletePost","delete","sharePost","title","author","body","post","editPost","put","SingleGetPost","type","payload","WebAPI","ItemNav","props","to","children","exact","updateTab","path","match","className","onClick","Nav","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","name","style","fontSize","color","connect","state","navTab","nav","dispatch","tab","actionTypes","updateNavTab","Component","Share","handleChange","e","setState","target","value","onSubmit","prevProps","this","isLoadingSharePost","history","console","log","push","placeholder","onChange","height","withRouter","action","Img","src","desc","link","alt","Home","getUnsplashPostList","isLoadingGetUnsplashPosts","UnsplashPosts","template","map","UnsplashPost","urls","small","alt_description","links","html","loading","role","Edit","onConfirm","params","handlePropsToState","isLoadingEditPost","PostList","getPostList","posts","key","source","isLoadingGetPosts","Item","createdAt","Post","onDelete","window","confirm","isLoadingDeletePost","isLoadingGetPost","App","component","Boolean","location","hostname","reducer","globalState","data","reducers","combineReducers","store","createStore","applyMiddleware","logger","promiseMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.37246c95.chunk.js","sourcesContent":["export const UPDATE_NAV_TEXT = 'UPDATE_NAV_TEXT'\nexport const UPDATE_NAV_TAB = 'UPDATE_NAV_TAB'\n\nexport const GET_POSTS = 'GET_POSTS'\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS'\n\nexport const SINGLE_GET_POST = 'SINGLE_GET_POST'\nexport const SINGLE_GET_POST_SUCCESS = 'SINGLE_GET_POST_SUCCESS'\n","import axios from 'axios';\n\nexport const getUnsplashPosts = () => axios.get('https://api.unsplash.com/photos/?client_id=aae4b30df237a7474cc5ff86eca6fd20ff9c173db667d16b8958205a6948fab4&per_page=30')\nexport const getPosts = () => axios.get('https://qootest.com/posts?_sort=id&_order=desc&_limit=10')\nexport const getSinglePost = (postId) => axios.get(`https://qootest.com/posts/${postId}`)\nexport const deletePost = postId => axios.delete(`https://qootest.com/posts/${postId}`)\nexport const sharePost = (title, author, body) => axios.post('https://qootest.com/posts', { title, author, body })\nexport const editPost = (postId, title, author, body) => axios.put(`https://qootest.com/posts/${postId}`, {title, author, body})","import * as actionTypes from './actionTypes'\nimport * as WebAPI from './WebAPI'\n\n// action creator\nexport const updateNavTab = (tab) => {\n    return {\n        type: actionTypes.UPDATE_NAV_TAB,\n        name: tab\n    }\n}\n\nexport const getUnsplashPostList = () => {\n    return {\n        type: 'GET_UNSPLASH_POST_LIST',\n        payload: WebAPI.getUnsplashPosts()\n    }\n}\n\nexport const getPostList = () => {\n    return {\n        type: 'GET_POST_LIST',\n        payload: WebAPI.getPosts()\n    }\n}\n\nexport const SingleGetPost = (postId) => {\n    return {\n        type: 'GET_POST',\n        payload: WebAPI.getSinglePost(postId)\n    }\n}\n\nexport const DeletePost = (postId) => {\n    return {\n        type: 'DELETE_POST',\n        payload: WebAPI.deletePost(postId)\n    }\n}\n\nexport const ShareSinglePost = (title, author, body) => {\n    return {\n        type: 'SHARE_POST',\n        payload: WebAPI.sharePost(title, author, body)\n    }\n}\n\nexport const EditSinglePost = (postId, title, author, body) => {\n    return {\n        type: 'EDIT_POST',\n        payload: WebAPI.editPost(postId, title, author, body)\n    }\n}","import React, { Component } from 'react';\nimport './nav.css';\nimport {\n    Link, Route\n} from \"react-router-dom\";\nimport * as action from '../../action'\nimport FontAwesome from 'react-fontawesome';\nimport { FaMarkdown } from 'react-icons/fa';\n\nfunction ItemNav(props) {\n    const { to, children, exact, updateTab } = props\n    return (\n        <Route\n            path={to}\n            exact={exact}\n            children={({ match }) => (\n                <button className={`nav__item ${match ? 'active' : \"\"}`}\n                    onClick={() => { updateTab(to) }}\n                >\n                    <Link to={to}>\n                        {children}\n                    </Link>\n                </button>\n            )}\n        />\n    )\n}\n\nconst Nav = ({ updateTab }) => {\n    const style = {\n        fontSize: \"25px\",\n        color: \"black\"\n    }\n    return (\n        <nav className=\"nav navbar-expand-lg navbar-dark\">\n            <button className=\"nav__item navbar-brand\" href=\"#\"><b>Blog</b></button>\n            <button className=\"navbar-toggler ml-auto\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <ItemNav to=\"/\" exact={true} updateTab={updateTab}>\n                        <FontAwesome\n                            name='fas fa-home'\n                            style={{ style }}\n                        />\n                        <span>Home</span>\n                    </ItemNav>\n                    <ItemNav to=\"/post\" updateTab={updateTab}>\n                        Post\n                    </ItemNav>\n                    <ItemNav to=\"/share\" updateTab={updateTab}>\n                     <FaMarkdown style={{ fontSize: \"25px\"}} />\n                     Share\n                 </ItemNav>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport {\n    Link, Route\n} from \"react-router-dom\";\nimport FontAwesome from 'react-fontawesome';\nimport { connect } from 'react-redux'\nimport Nav from '../components/nav/nav.js'\nimport { updateNavTab, updateNavText } from '../action';\n\nconst navTabContainer = (props) => {\n    return <Nav {...props} />\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        navTab: state.nav.navTab\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        updateTab: tab => dispatch(updateNavTab(tab))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(navTabContainer);\n","import React, { Component } from 'react';\nimport './footer.css';\nimport {\n    Link, Route\n} from \"react-router-dom\";\nimport FontAwesome from 'react-fontawesome';\n\nclass Footer extends Component {\n    render() {\n        const style = {\n            color: \"black\",\n            fontSize: \"15px\"\n        }\n        return (\n            <div className=\"footer\">\n                <div className=\"wrapper clearfix\">\n                    <div className=\"copyRight\">\n                        <div className=\"title\">Copyright © 2019 Fan630 Inc. All rights reserved</div>\n                        <div className=\"subTitle\">Build website with lots of fun</div>\n                    </div>\n                    <div className=\"socialMedia\">\n                        <div className=\"link\">\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-facebook'\n                                    style={{ style }}\n                                />\n                            </a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-twitter'\n                                    style={{ style }}\n                                />\n                            </a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-weixin'\n                                    style={{ style }}\n                                /></a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-google'\n                                    style={{ style }}\n                                />\n                            </a>\n                            <a href=\"#\">\n                                <FontAwesome\n                                    name='fas fa-behance'\n                                    style={{ style }}\n                                />\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Footer;","import React, { Component } from 'react';\nimport './share.css';\nimport { sharePost } from '../../WebAPI'\nimport axios from 'axios';\nimport {\n    Link\n} from 'react-router-dom'\n\nimport FontAwesome from 'react-fontawesome';\n\nclass Share extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            author: '',\n            title: '',\n            body: ''\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isLoadingSharePost, history } = this.props\n\n        if (\n            prevProps.isLoadingSharePost !== isLoadingSharePost && !isLoadingSharePost\n        ) {\n            history.push('/post')\n        } else {\n            console.log(this.state)\n        }\n    }\n\n    handleChange = (e) => {\n        const { author, title, body } = this.state\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    onSubmit = () => {\n        const { title, author, body } = this.state\n        this.props.sharePost(title, author, body)\n        this.setState({\n            author: '',\n            title: '',\n            body: ''\n        })\n    }\n\n    render() {\n        const { author, title, body } = this.state\n        console.log(author, title, body)\n        const isLoadingSharePost = this.props\n\n        const style = {\n            height: '300px'\n        }\n        return (\n            <div className=\"wrapper\">\n                <h1>Share your post</h1>\n                <Link to=\"/post\">\n                    <FontAwesome\n                        name='angle-double-left'\n                        style={{ fontSize: \"25px\" }}\n                    />\n                    <span>Back to PostList</span>\n                </Link>\n\n                <div className=\"input-group mx-auto\">\n                    <div className=\"input-group__item mt-3 \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"name\" name=\"author\" value={author} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"title\" name=\"title\" value={title} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item\">\n                        <textarea className=\"form-control\" placeholder=\"body\" style={style} name=\"body\" value={body} onChange={this.handleChange}></textarea>\n                    </div>\n                    <button className=\"btn btn-outline-secondary mx-auto\" type=\"button\" onClick={this.onSubmit}>send</button>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default Share\n\n\n   ","import React, { Component } from 'react';\nimport '../components/post/post.css'\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { sharePost } from '../WebAPI'\nimport * as action from '../action'\nimport Share from '../components/share'\n\nconst shareContainer = (props) => {\n    return <Share {...props} />\n}\n\n\nconst mapStateToProps = (state) =>{\n    return{\n        isLoadingSharePost: state.nav.isLoadingSharePost, \n    }\n}\n\n//重點就是這裡要實作改變\nconst mapDispatchToProps = dispatch => {\n    return {\n        sharePost: (title, author, body) => {\n            dispatch(action.ShareSinglePost(title, author, body))\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(shareContainer)\n    )\n\n\n","import React, { Component } from 'react';\nimport './home.css';\nimport axios from 'axios';\nimport FontAwesome from 'react-fontawesome';\n\nconst Img = ({ src, desc, link }) => {\n    return (\n        <div className=\"pic\">\n            <a href={link} target=\"_blank\">\n                <img src={src} alt=\"\"/>\n            </a>\n            <p>{desc}</p>\n        </div>\n    )\n}\n\n\nclass Home extends Component {\n    componentDidMount() {\n        this.props.getUnsplashPostList()\n    }\n\n    render() {\n        const { isLoadingGetUnsplashPosts, UnsplashPosts } = this.props\n        const template =(\n            <div className=\"wrapper\">\n                {UnsplashPosts.map(UnsplashPost =>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Img src={UnsplashPost.urls.small} desc={UnsplashPost.alt_description} link={UnsplashPost.links.html}/>\n                            </div>\n                    </div>\n                )}\n            </div>\n        )\n        const loading = (\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        )\n        return (\n            <div>\n                <h1>Welcome</h1>\n                {isLoadingGetUnsplashPosts ? loading : template}\n            </div>\n        )\n    }\n}\n\n\nexport default Home;","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { getUnsplashPosts } from '../WebAPI'\nimport * as action from '../action'\nimport Home from '../components/home'\n\nconst HomeContainer = (props) => {\n    return <Home {...props} />\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoadingGetUnsplashPosts: state.nav.isLoadingGetUnsplashPosts,\n        UnsplashPosts: state.nav.UnsplashPosts\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUnsplashPostList: () => {\n            dispatch(action.getUnsplashPostList())\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(HomeContainer)\n    );","import React, { Component } from 'react';\nimport './edit.css';\nimport axios from 'axios';\nimport {\n    Link\n} from \"react-router-dom\"\nimport FontAwesome from 'react-fontawesome';\n\nclass Edit extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            title: '',\n            author: '',\n            body: '',\n        }\n    }\n\n    componentDidMount() {\n        const postId = this.props.match.params.id\n        this.props.getSinglePost(postId)\n    }\n\n    handleChange = (e) => {\n        const { title, author, body } = this.state\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    onConfirm = () => {\n        const postId = this.props.match.params.id\n        const {title, author, body} = this.state\n        this.props.editPost(postId, title, author, body)\n    }\n\n    componentDidUpdate(prevProps) {\n        const { post, isLoadingEditPost, history } = this.props\n        if (post !== prevProps.post){ \n            this.handlePropsToState();\n        }\n\n        if (\n            isLoadingEditPost !== prevProps.isLoadingEditPost && !isLoadingEditPost\n        ) {\n            history.push('/post')\n        } \n    }\n\n    handlePropsToState=() =>{\n        const {post} = this.props\n        this.setState({\n            title: post.title,\n            author: post.author,\n            body: post.body\n        })\n    }\n\n\n\n    render() {\n        const { title, author, body } = this.state\n        const style = {\n            height: '300px'\n        }\n        return (\n            <div className=\"wrapper\">\n                <h1>Edit your post</h1>\n                <Link to=\"/post\">\n                    <FontAwesome\n                        name='angle-double-left'\n                        style={{ fontSize: \"25px\" }}\n                    />\n                    <span>Back to PostList</span>\n                </Link>\n\n                <div className=\"input-group mx-auto\">\n                    <div className=\"input-group__item mt-3 \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"name\" name=\"author\" value={author} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item \">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"title\" name=\"title\" value={title} onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-group__item\">\n                        <textarea className=\"form-control\" placeholder=\"body\" style={style} name=\"body\" value={body} onChange={this.handleChange}></textarea>\n                    </div>\n                    <button className=\"btn btn-outline-secondary mx-auto\" type=\"button\" onClick={this.onConfirm}>Confirm</button>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\n\nexport default Edit;","import React, { Component } from 'react';\nimport '../components/post/post.css'\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { editPost} from '../WebAPI'\nimport * as action from '../action'\nimport Edit from '../components/edit'\n\nconst editContainer = (props) => {\n    return <Edit {...props} />\n}\n\n\nconst mapStateToProps = (state) =>{\n    return{\n        isLoadingEditPost: state.nav.isLoadingEditPost,\n        post:state.nav.post\n    }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        editPost: (postId, title, author, body) => {\n            dispatch(action.EditSinglePost(postId, title, author, body))\n        }, \n        getSinglePost: (postId) => {\n            dispatch(action.SingleGetPost(postId))\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(editContainer)\n    )\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { withRouter } from \"react-router-dom\";\nimport {getPosts} from '../../WebAPI'\nimport ReactMarkdown from 'react-markdown';\nimport './post.css';\n\n\nclass PostList extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        this.props.getPostList()\n    }\n\n    render() {\n        const { posts, history } = this.props\n        return (\n            <div className=\"wrapper\">\n                <ul className=\"list-group mt-5\">\n                    {posts.map((post) =>\n                        <li className=\"list-group-item\"\n                            key={post.id}\n                            id={post.id}\n                            onClick={() => {\n                                history.push('/post/' + post.id)\n                            }}\n                        >\n                            <ReactMarkdown source={post.title} />\n                            \n                        </li>\n                    )}\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default PostList;","import React, { Component } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { getPosts } from '../WebAPI'\nimport * as action from '../action'\nimport PostList from '../components/post_list'\n\nconst postListContainer = (props) => {\n    return <PostList {...props} />\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoadingGetPosts: state.nav.isLoadingGetPosts,\n        posts: state.nav.posts\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getPostList: () => {\n            dispatch(action.getPostList())\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(postListContainer)\n    );","import React, { Component } from 'react';\nimport './post.css';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport {\n    Link\n} from \"react-router-dom\"\nimport FontAwesome from 'react-fontawesome';\nimport { getSinglePost, deletePost } from '../../WebAPI'\n\nclass Item extends Component {\n    render() {\n        const { post } = this.props\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-3 info\">\n                        <span>Id</span>\n                        <div>{post.id}</div>\n                        <span>Author</span>\n                        <div>{post.author ? <ReactMarkdown source={post.author} />: '作者不詳'}</div>\n                        <span>Title</span>\n                        <div><ReactMarkdown source={post.title} /></div>\n                        <span>Created Time</span>\n                        <div className=\"createdTime\">{post.createdAt ? post.createdAt : '無從得知'}</div>\n                    </div>\n                    <div className=\"col-9 article\">\n                        <div className=\"content\">\n                            {post.body ? <ReactMarkdown source={post.body} /> : 'Loading...'}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass Post extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount() {\n        const postId = this.props.match.params.id\n        this.props.getSinglePost(postId)\n    }\n\n\n    onDelete = () => {\n        const message = 'Are you sure deleting this?';\n        const postId = this.props.match.params.id\n        const { deletePost } = this.props;\n        if (window.confirm(message)) {\n            deletePost(postId);\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        const { isLoadingDeletePost, history} = this.props\n        if (isLoadingDeletePost !== prevProps.isLoadingDeletePost && !isLoadingDeletePost){\n            history.push('/post')\n        }\n    }\n\n\n    render() {\n        const { post, history, deletePost } = this.props\n        return (\n            <div className=\"wrapper\">\n                <button type=\"button\" className=\"delete btn btn-secondary mt-3\" onClick={this.onDelete}>\n                    Delete\n                </button>\n                <button type=\"button\" className=\"edit btn btn-secondary mt-3\" onClick={() => {\n                    history.push('/post/edit/' + post.id)\n                }}>\n                    Edit\n                </button>\n                <ul className=\"list-group\">\n                    <Link to=\"/post\">\n                        <FontAwesome\n                            name='angle-double-left'\n                            style={{ fontSize: \"25px\" }}\n                        />\n                        <span>Back to PostList</span>\n                    </Link>\n                    <Item post={post} />\n                </ul>\n            </div>\n        )\n    }\n}\n\n\nexport default Post;","import React, { Component } from 'react';\nimport '../components/post/post.css'\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport { getSinglePost, deletePost } from '../WebAPI'\nimport * as action from '../action'\nimport Post from '../components/post'\n\nconst postContainer = (props) => {\n    return <Post {...props} />\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isLoadingGetPost: state.nav.isLoadingGetPost,\n        isLoadingDeletePost: state.nav.isLoadingDeletePost,\n        post: state.nav.post\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getSinglePost: (postId) => {\n            dispatch(action.SingleGetPost(postId))\n        },\n        deletePost: (postId) => {\n            dispatch(action.DeletePost(postId))\n        }\n    }\n}\n\n\nexport default\n    withRouter(\n        connect(mapStateToProps, mapDispatchToProps)(postContainer)\n    )\n","// eslint-disable-next-line\n\nimport React, { Component } from 'react';\nimport './App.css';\nimport Nav from './container/navTabContainer'\nimport Footer from './components/footer/footer.js'\nimport Share from './container/shareContainer'\nimport Home from './container/HomeContainer'\nimport Edit from './container/editContainer.js'\nimport PostList from './container/postListContainer'\nimport Post from './container/postContainer'\nimport FontAwesome from 'react-fontawesome';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Nav />\n          {/* <Footer /> */}\n          <div className=\"page\">\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/share\" component={Share} />\n            <Route exact path=\"/post/:id\" component={Post} />\n            <Route exact path=\"/post/edit/:id\" component={Edit} />\n            <Route exact path=\"/post\" component={PostList} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actionTypes'\n\nconst state = {\n    navTab: 'Home',\n    isLoadingGetUnsplashPosts: false,\n    isLoadingGetPosts: false,\n    isLoadingGetPost: false,\n    isLoadingDeletePost: false,\n    isLoadingSharePost: false,\n    isLoadingEditPost: false,\n    UnsplashPosts:[],\n    posts: [],\n    post: {},\n}\n\nfunction reducer(globalState = state, action) {\n\n    switch (action.type) {\n        case actionTypes.UPDATE_NAV_TAB:\n            return {\n                ...globalState,\n                navTab: action.name\n            }\n\n        case 'GET_UNSPLASH_POST_LIST_PENDING':\n            return {\n                ...globalState,\n                isLoadingGetUnsplashPosts: true,\n            }\n\n        case 'GET_UNSPLASH_POST_LIST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingGetUnsplashPosts: false,\n                UnsplashPosts: action.payload.data\n            }\n\n        case 'GET_POST_LIST_PENDING':\n            return {\n                ...globalState,\n                isLoadingGetPosts: true,\n            }\n\n        case 'GET_POST_LIST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingGetPosts: false,\n                posts: action.payload.data\n            }\n\n        case 'GET_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingGetPost: true,\n            }\n\n        case 'GET_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingGetPost: false,\n                post: action.payload.data\n            }\n\n        case 'DELETE_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingDeletePost: true,\n            }\n\n        case 'DELETE_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingDeletePost: false,\n            }\n\n        case 'SHARE_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingSharePost: true,\n            }\n\n        case 'SHARE_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingSharePost: false,\n            }\n\n        case 'EDIT_POST_PENDING':\n            return {\n                ...globalState,\n                isLoadingEditPost: true,\n            }\n\n        case 'EDIT_POST_FULFILLED':\n            return {\n                ...globalState,\n                isLoadingEditPost: false,\n            }\n\n        default:\n            return globalState\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactMarkdown from 'react-markdown';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\n// import thunk from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport logger from 'redux-logger'\nimport reducer from './reducer'\n\nconst reducers = combineReducers({\n    nav: reducer\n})\n// const store = createStore(reducers, applyMiddleware(thunk))\n\nconst store = createStore(reducers, applyMiddleware(logger, promiseMiddleware))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}